version: "3"

volumes:
  postgresql:
    driver: local

services:
  customer:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
      - '4000:4000'
    depends_on:
      - db
    environment:
      DB_HOST: 'db'
      APP_SERVICE: 'customer'
      CUSTOMER_API_ADDRESS: '0.0.0.0:3000'
      CUSTOMER_GRPC_ADDRESS: '0.0.0.0:4000'
      FLIGHT_API_ADDRESS: 'flight:3001'
      FLIGHT_GRPC_ADDRESS: 'flight:4001'
      BOOKING_API_ADDRESS: 'booking:3002'
      BOOKING_GRPC_ADDRESS: 'booking:4002'
    env_file:
      - .env
  flight:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
      - '5001:5001'
    depends_on:
      - db
    environment:
      DB_HOST: 'db'
      APP_SERVICE: 'flight'
      CUSTOMER_API_ADDRESS: 'customer:3000'
      CUSTOMER_GRPC_ADDRESS: 'customer:4000'
      FLIGHT_API_ADDRESS: '0.0.0.0:3001'
      FLIGHT_GRPC_ADDRESS: '0.0.0.0:4001'
      BOOKING_API_ADDRESS: 'booking:3002'
      BOOKING_GRPC_ADDRESS: 'booking:4002'
    env_file:
      - .env
  booking:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3002:3002'
      - '5002:5002'
    depends_on:
      - db
    environment:
      DB_HOST: 'db'
      APP_SERVICE: 'booking'
      CUSTOMER_API_ADDRESS: 'customer:3000'
      CUSTOMER_GRPC_ADDRESS: 'customer:4000'
      FLIGHT_API_ADDRESS: 'flight:3001'
      FLIGHT_GRPC_ADDRESS: 'flight:4001'
      BOOKING_API_ADDRESS: '0.0.0.0:3002'
      BOOKING_GRPC_ADDRESS: '0.0.0.0:4002'
    env_file:
      - .env
  db:
    image: postgres:10-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: flight_booking
      PGDATA: /data/postgresql
    volumes:
      - postgresql:/data/postgresql
    ports:
      - "5432:5432"
